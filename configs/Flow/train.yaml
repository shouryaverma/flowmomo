dataset:
  train:
    # Peptides
    - class: DynamicBatchWrapper
      dataset:
        class: MixDatasetWrapper
        datasets:
          # pepbench
          - class: PeptideDataset
            mmap_dir: ./datasets/peptide/pepbench/processed
            specify_index: ./datasets/peptide/pepbench/processed/train_index.txt
            cluster: ./datasets/peptide/pepbench/train.cluster
            length_type: block
          # protein-peptide complex with non standard amino acids
          - class: PeptideDataset
            mmap_dir: ./datasets/peptide/pepbench/processed
            specify_index: ./datasets/peptide/pepbench/processed/non_standard_index.txt
            length_type: block
          # protein-fragments
          - class: PeptideDataset
            mmap_dir: ./datasets/peptide/ProtFrag/processed
            length_type: block
        # weights: [1.0, 1.0, 1.0]
      complexity: n*n
      ubound_per_batch: 40000  # Moderate batch size for flow training
      n_use_max_in_batch: true
    # Small Molecules
    - class: DynamicBatchWrapper
      dataset: # crossdocked
        class: MoleculeDataset
        mmap_dir: ./datasets/molecule/CrossDocked/processed
        specify_index: ./datasets/molecule/CrossDocked/processed/train_index.txt
        length_type: block
      complexity: n*n
      ubound_per_batch: 20000  # Smaller for molecules (more complex)
      n_use_max_in_batch: true
    # Antibody
    - class: DynamicBatchWrapper
      dataset:
        class: AntibodyDataset
        mmap_dir: ./datasets/antibody/SAbDab/processed
        specify_index: ./datasets/antibody/SAbDab/processed/train_index.txt
        length_type: block
      complexity: n*n
      ubound_per_batch: 30000
      n_use_max_in_batch: true
  valid:
    - class: DynamicBatchWrapper
      dataset:
        class: PeptideDataset
        mmap_dir: ./datasets/peptide/pepbench/processed
        specify_index: ./datasets/peptide/pepbench/processed/valid_index.txt
        length_type: block
      complexity: n*n
      ubound_per_batch: 40000
      n_use_max_in_batch: true
    - class: DynamicBatchWrapper
      dataset:
        class: MoleculeDataset
        mmap_dir: ./datasets/molecule/CrossDocked/processed
        specify_index: ./datasets/molecule/CrossDocked/processed/valid_index.txt
        length_type: block
      complexity: n*n
      ubound_per_batch: 15000  # Smaller for validation sampling
      n_use_max_in_batch: true
    - class: DynamicBatchWrapper
      dataset:
        class: AntibodyDataset
        mmap_dir: ./datasets/antibody/SAbDab/processed
        specify_index: ./datasets/antibody/SAbDab/processed/valid_index.txt
        length_type: block
      complexity: n*n
      ubound_per_batch: 30000
      n_use_max_in_batch: true

dataloader:
  train:
    shuffle: true
    num_workers: 4
  valid:
    num_workers: 2

trainer:
  class: FlowTrainer  # CHANGED: Use FlowTrainer instead of IterAETrainer
  criterion: loss
  config:
    max_epoch: 200  # Flow models typically need fewer epochs
    save_topk: 10
    val_freq: 5  # Validate less frequently due to sampling cost
    save_dir: ./ckpts/rectified_flow
    patience: 15  # More patience for flow training
    metric_min_better: true
    proj_name: RectifiedFlow # for wandb
    logger: tensorboard
    
    # Flow-specific validation settings
    val_sample_steps: 20  # NEW: Number of sampling steps during validation
    val_apply_constraints: true  # NEW: Apply chemical constraints during validation
    
    optimizer:
      class: AdamW
      lr: 2.0e-4  # Slightly higher LR for flow training
      weight_decay: 1.0e-5

    scheduler:
      class: ReduceLROnPlateau
      factor: 0.7
      patience: 8
      mode: min
      frequency: val_epoch
      min_lr: 1.0e-6

model:
  class: MolecularRectifiedFlow  # CHANGED: Use new rectified flow model
  encoder_type: EPT
  decoder_type: EPT
  hidden_size: 512
  embed_size: 256  # NEW: Embedding size
  edge_size: 128   # NEW: Edge feature size
  num_steps: 50    # NEW: Number of flow steps
  k_neighbors: 9
  d_cutoff: 8.0    # NEW: Distance cutoff for edges
  
  encoder_opt:
    n_rbf: 64
    cutoff: 10.0
    n_layers: 6
    n_head: 8
    use_edge_feat: true
    pre_norm: true
    efficient: false
    vector_act: layernorm
    
  decoder_opt:
    n_rbf: 64
    cutoff: 10.0
    n_layers: 6
    n_head: 8
    use_edge_feat: true
    pre_norm: true
    efficient: false
    vector_act: layernorm
    
  loss_weights:
    coord_loss: 1.0      # Coordinate flow matching loss
    atom_loss: 1.0       # Atom type flow matching loss
    block_loss: 1.0      # Block type flow matching loss
    bond_loss: 0.5       # Bond prediction loss
    constraint_loss: 0.1 # General constraint loss
    valence_loss: 0.2    # NEW: Valence constraint loss
    clash_loss: 0.15     # NEW: Atomic clash avoidance loss

load_ckpt: ''